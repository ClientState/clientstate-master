// Generated by CoffeeScript 1.8.0
(function() {
  var ProviderLoginDetails, User, bookshelf;

  require('./conn');

  bookshelf = require('bookshelf')(knexion);

  User = bookshelf.Model.extend({
    tableName: 'users',
    hasTimestamps: true,
    logins: function() {
      return this.hasMany(ProviderLoginDetails);
    }
  });

  User.createTable = function(t) {
    t.increments('id');
    return t.timestamps();
  };

  User.tableName = 'users';

  ProviderLoginDetails = bookshelf.Model.extend({
    tableName: 'provider_login_details',
    hasTimestamps: true
  });

  ProviderLoginDetails.createTable = function(t) {
    t.string('id').primary();
    t.string('provider');
    t.text('data');
    t.timestamps();
    return t.integer('user_id').unsigned().references('id').inTable('users');
  };

  ProviderLoginDetails.tableName = 'provider_login_details';


  /*
  
  ProviderLoginDetails = bookshelf.Model.extend
    tableName: 'provider_login_details'
  
    createTable: (t) ->
       *t.increments 'id'
       * Provider unique id
      t.string('id').primary()
      t.string 'provider'
      t.text 'data'
      t.timestamps()
      t.integer('user_id')
        .unsigned()
        .references('id')
        .inTable('users')
         * .onDelete
         * .onUpdate
   */


  /*
  class App extends bookshelf.Model
    tableName: 'apps'
  
     * many ProviderIDSecrets
  
    user: () ->
      @belongsTo User
  
    services: () ->
      @hasMany Service
  
  
  class ProviderIDSecret extends bookshelf.Model
    tableName: 'provider_id_secrets'
  
     * provider
     * client_id
     * client_secret
  
    app: () ->
      @belongsTo App
  
  
  class Service extends bookshelf.Model
    tableName: 'services'
  
    secrets: () ->
      @hasMany ProviderIDSecret
  
    deployments: () ->
      @hasMany ServiceDeployment
  
  
  class ServiceDeployment extends bookshelf.Model
    tableName: 'service_deployments'
  
    service: () ->
      @hasOne Service
   */

  global.bookshelf = bookshelf;

  module.exports.User = User;

  module.exports.ProviderLoginDetails = ProviderLoginDetails;

}).call(this);
