// Generated by CoffeeScript 1.8.0
(function() {
  var ProviderLoginDetails, User, app, express, oauth, server, _ref;

  express = require('express');

  app = express();

  oauth = require('oauth-express');

  _ref = require("./models"), User = _ref.User, ProviderLoginDetails = _ref.ProviderLoginDetails;

  app.get('/auth/:provider', oauth.handlers.auth_provider_redirect);

  app.get('/auth_callback/:provider', oauth.handlers.auth_callback);

  oauth.emitters.github.on('complete', function(result) {
    var trans;
    trans = bookshelf.transaction(function(t) {
      var model, pld, uid;
      uid = result.user_data.id;
      model = {
        id: uid,
        provider: "github",
        data: result.user_data
      };
      return pld = new ProviderLoginDetails(model).fetch(null, {
        transaction: t
      }).then(function(m) {
        var user;
        if (m === null) {
          user = new User();
          return user.save(null, {
            method: "insert",
            transacting: t
          }).then(function(user) {
            model.user_id = user.id;
            pld = new ProviderLoginDetails(model);
            return pld.save(null, {
              method: "insert",
              transacting: t
            }).then(function() {
              console.log("OK!");
            });
          });
        } else {
          console.log("!!!!!! ALREADY HAVE", m.id);
        }
      });
    });
    return trans["catch"](function(err) {
      return console.log("ERR", err);
    });

    /*
    console.log '**************************************'
    console.log result
    console.log()
    console.log()
    console.log()
    console.log()
     */
  });

  app.use("/public", express["static"]("" + __dirname + "/public"));

  app.use("/lib", express["static"]("" + __dirname + "/bower_components"));

  app.use("/", express["static"]("" + __dirname + "/views"));

  server = app.listen(4000, function() {
    return console.log('Listening on port %d', server.address().port);
  });

  module.exports.app = app;

}).call(this);
