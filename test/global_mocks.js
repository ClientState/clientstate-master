// Generated by CoffeeScript 1.8.0
(function() {
  var MockContainer, MockDocker, docker, uuid;

  uuid = {
    v4: function() {
      return "other-uuid";
    }
  };

  MockContainer = (function() {
    function MockContainer() {}

    MockContainer.prototype.callCounts = {
      start: 0,
      inspect: 0
    };

    MockContainer.prototype.start = function(opts, cb) {
      this.callCounts.start += 1;
      return cb();
    };

    MockContainer.prototype.inspect = function(cb) {
      var info;
      this.callCounts.inspect += 1;
      info = {
        Id: Math.random().toString().substr(2, 5),
        Name: "mock_container"
      };
      return cb(null, info);
    };

    return MockContainer;

  })();

  MockDocker = (function() {
    function MockDocker() {}

    MockDocker.prototype.callCounts = {
      createContainer: 0
    };

    MockDocker.prototype.createContainer = function(opts, cb) {
      this.callCounts.createContainer += 1;
      return cb(null, new MockContainer());
    };

    MockDocker.prototype.reset = function() {
      var k, v, _ref, _results;
      _ref = this.callCounts;
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        _results.push(this.callCounts[k] = 0);
      }
      return _results;
    };

    return MockDocker;

  })();

  docker = new MockDocker();

  module.exports = function() {
    global.uuid = uuid;
    return global.docker = docker;
  };

}).call(this);
