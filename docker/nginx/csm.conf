daemon off;
worker_processes  1;
events {
  worker_connections  1024;
}

env CSM_SERVER_NAME;
env CSM_PORT_4000_TCP_ADDR;
env CSM_PORT_4000_TCP_PORT;

env REDIS_PORT_6379_TCP_ADDR;
env REDIS_PORT_6379_TCP_PORT;


http {
  #include       mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # in case we need to debug, for real
  #log_format shorty 'RA: $remote_addr - HH: $http_host - APPID: $appid';
  #error_log /dev/stdout info;
  #access_log /dev/stdout shorty;

  underscores_in_headers on;

  server {
    listen 80;

    # TODO, SSL-only, redirect 80 to 443
    set $CSM_SERVER_NAME '';
    set $CSM_PORT_4000_TCP_ADDR '';
    set $CSM_PORT_4000_TCP_PORT '';
    set_by_lua $CSM_SERVER_NAME 'return os.getenv("CSM_SERVER_NAME")';
    set_by_lua $CSM_PORT_4000_TCP_ADDR 'return os.getenv("CSM_PORT_4000_TCP_ADDR")';
    set_by_lua $CSM_PORT_4000_TCP_PORT 'return os.getenv("CSM_PORT_4000_TCP_PORT")';

    server_name $CSM_SERVER_NAME;

    location / {
      proxy_pass http://$CSM_PORT_4000_TCP_ADDR:$CSM_PORT_4000_TCP_PORT;
      proxy_pass_request_headers on;
    }
  }

  server {
    listen 80;

    # TODO - how do you use the variable?
    #set $CSM_SERVER_NAME '';
    #set_by_lua $CSM_SERVER_NAME 'return os.getenv("CSM_SERVER_NAME")';
    #server_name ~^(?<appid>.+)\.$$CSM_SERVER_NAME;
    server_name "~^(?<appid>.+)\.clientstate\.local$";

    location / {

      set $backend '';
      # with appid variable, find backend by asking redis for this key
      access_by_lua '
      local redis = require "resty.redis"
      local red = redis:new()
      red:connect(os.getenv("REDIS_PORT_6379_TCP_ADDR"), os.getenv("REDIS_PORT_6379_TCP_PORT"))
      local res, err = red:get(ngx.var.appid)
      ngx.var.backend = res
      ';
      proxy_pass http://$backend;

      # CORS - wide open
      # https://gist.github.com/michiel/1064640

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
      if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
    }

  }

}
